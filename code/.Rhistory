ggplot(correlation_data, aes(x = covid_19_deaths, y = weekly_excess)) +
geom_point(color = "blue", alpha = 0.6) +  # Scatter points
geom_smooth(method = "lm", color = "red", se = TRUE) +  # Regression line with confidence interval
labs(
title = "Weekly Excess Mortality vs COVID-19 Deaths",
x = "Weekly COVID-19 Deaths",
y = "Weekly Excess Mortality"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
# Line plot for COVID-19 deaths and excess deaths
ggplot(merged_data, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess deaths line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Weekly Excess Mortality",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
# Line plot for COVID-19 deaths and excess deaths
ggplot(excess_mortality, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess deaths line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Weekly Excess Mortality",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
filtered_data <- merged_data %>%
filter(date <= as.Date("2023-12-31"))
# Line plot for COVID-19 deaths and excess mortality
ggplot(filtered_data, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Excess Mortality (Ending 2023)",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
scale_color_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +  # Custom colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
plot_data <- excess_mortality |>
filter(date <= as.Date("2023-12-31"))
# Line plot for COVID-19 deaths and excess mortality
ggplot(filtered_data, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Excess Mortality (Ending 2023)",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
scale_color_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +  # Custom colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
plot_data <- excess_mortality |>
filter(date <= as.Date("2023-12-31"))
# Line plot for COVID-19 deaths and excess mortality
ggplot(plot_data, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Excess Mortality (Ending 2023)",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
scale_color_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +  # Custom colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
excess_mortality |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
library(ggplot2)
library(dplyr)
# Filter data to include only up to the end of 2023
filtered_data <- correlation %>%
filter(date <= as.Date("2023-12-31"))
# Line plot for COVID-19 deaths and excess mortality
ggplot(filtered_data, aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +  # COVID deaths line
labs(
title = "Weekly COVID-19 Deaths vs Excess Mortality (2020–2023)",
x = "Date",
y = "Number of Deaths",
color = "Legend"
) +
scale_color_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +  # Custom colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
excess_mortality |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_line(aes(y = weekly_excess)) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths))
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
excess_mortality |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_line(aes(y = weekly_excess, color = "Excess Mortality"), size = 1) +  # Excess mortality line
geom_line(aes(y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1)
library(ggplot2)
library(dplyr)
# Filter data to include only up to the end of 2023
merged_data |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data) +
geom_line(aes(x = date, y = weekly_excess, color = "Excess Mortality"), size = 1) +
geom_line(aes(x = date, y = covid_19_deaths, color = "COVID-19 Deaths"), size = 1) +
scale_y_continuous(
name = "Excess Mortality",
sec.axis = sec_axis(~ ., name = "COVID-19 Deaths")  # Duplicate axis for COVID deaths
) +
labs(
title = "Weekly COVID-19 Deaths vs Excess Mortality (2020–2023)",
x = "Date",
color = "Legend"
) +
scale_color_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
library(ggplot2)
library(dplyr)
# Filter data to include only up to the end of 2023
merged_data |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data, aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
library(ggplot2)
library(dplyr)
# Filter data to include only up to the end of 2023
merged_data |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data, aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data, aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data, aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31"))
ggplot(filtered_data, aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
facet_wrap(~state_name)
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
facet_wrap(~state_name)
library(dplyr)
library(ggplot2)
library(readr)
library(ggrepel)
library(tidyverse)
library(excessmort)
library(purrr)
# Load the dataset from the RDS file in the data directory
dat <- readRDS("../data/dat.rds")
dat <- dat |>
mutate(across(c(total_deaths, covid_19_deaths, population, cases),as.numeric)) |>
filter(!is.na(total_deaths), !is.na(population)) |>
rename(
date = week_ending_date,   # Rename weekly date column
outcome = total_deaths     # Rename total deaths to outcome
) |>
mutate(
date = as.Date(date),      # Ensure date is in proper format
outcome = as.integer(outcome)  # Ensure outcome is integer
) |>
arrange(state_name, date)   # Sort by state and date
exclude_dates <- seq(as.Date("2020-01-01"), as.Date("2023-12-31"), by = "week")
state_fits <- baseline_data |>
group_by(state_name) |>
group_split() |>
set_names(unique(baseline_data$state_name)) |>
map(~ excess_model(
counts = .x,
start = min(.x$date),
end = max(.x$date),
exclude = exclude_dates,     # Exclude 2020–2024 dates
model = "quasipoisson",      # Recommended for weekly data
weekday.effect = FALSE,      # Turn off weekday effect for weekly data
keep.counts = T
))
library(dplyr)
library(ggplot2)
library(readr)
library(ggrepel)
library(tidyverse)
library(excessmort)
library(purrr)
# Load the dataset from the RDS file in the data directory
dat <- readRDS("../data/dat.rds")
dat <- dat |>
mutate(across(c(total_deaths, covid_19_deaths, population, cases),as.numeric)) |>
filter(!is.na(total_deaths), !is.na(population)) |>
rename(
date = week_ending_date,   # Rename weekly date column
outcome = total_deaths     # Rename total deaths to outcome
) |>
mutate(
date = as.Date(date),      # Ensure date is in proper format
outcome = as.integer(outcome)  # Ensure outcome is integer
) |>
arrange(state_name, date)   # Sort by state and date
exclude_dates <- seq(as.Date("2020-01-01"), as.Date("2023-12-31"), by = "week")
state_fits <- dat |>
group_by(state_name) |>
group_split() |>
set_names(unique(dat$state_name)) |>
map(~ excess_model(
counts = .x,
start = min(.x$date),
end = max(.x$date),
exclude = exclude_dates,     # Exclude 2020–2024 dates
model = "quasipoisson",      # Recommended for weekly data
weekday.effect = FALSE,      # Turn off weekday effect for weekly data
keep.counts = T
))
start_date <- as.Date("2020-01-01")
end_date <- as.Date("2023-12-31")
excess_mortality_all_states <- map_dfr(
state_fits,
~ excess_cumulative(fit = .x, start = start_date, end = end_date),
.id = "state_name"  # Add a column to identify the state
) |>
group_by(state_name) |>
mutate(
weekly_observed = observed - lag(observed),
weekly_observed = ifelse(is.na(weekly_observed), observed, weekly_observed)
)|>
rename(cum_excess = observed,
weekly_excess = weekly_observed) |>
select(-c(sd,fitted,se))
excess_mortality <- excess_mortality_all_states |>
left_join(dat, by = c("state_name", "date"))
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation_data$weekly_excess, correlation_data$covid_19_deaths)
#test with cor.test
correlation <- excess_mortality |>
filter(!is.na(weekly_excess), !is.na(covid_19_deaths))
cor.test(correlation$weekly_excess, correlation$covid_19_deaths)
#test with linear regression
regression_model <- lm(weekly_excess ~ covid_19_deaths, data = correlation)
summary(regression_model)
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), size = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), size = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
facet_wrap(~state_name)
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), linewidth = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), linewidth = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
facet_wrap(~state_name)
~/Documents/GitHub/bst260-2024-final-project/code/BST_260_Final_Project.qmd
# Filter data to include only up to the end of 2023
correlation |>
filter(date <= as.Date("2023-12-31")) |>
ggplot(aes(x = date)) +
geom_area(aes(y = weekly_excess, fill = "Excess Mortality"), linewidth = 1,alpha = 0.4) +  # Excess Mortality
geom_area(aes(y = covid_19_deaths, fill = "COVID-19 Deaths"), linewidth = 1,alpha = 0.4) +  # COVID-19 Deaths
labs(
title = "Overlap of Weekly COVID-19 Deaths and Excess Mortality",
x = "Date",
y = "Number of Deaths",
fill = "Legend"
) +
scale_fill_manual(values = c("Excess Mortality" = "blue", "COVID-19 Deaths" = "red")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "top"
) +
facet_wrap(~state_name)
